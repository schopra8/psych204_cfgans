// ------------------------------------------------------------------------------------------------
// Author: Sahil Chopra
// Psych 204, Autumn 2017
// Goal: Herewith, I forward sample a simple Bayesian Network inspred by Alison Gopnik's "blicket" 
//       experiments. Imagine a world where you have three objects "A", "B" "C" which of different
//       mass. Furthermore, we have a  fourth object "D" that is a light bulb. If the "A" and "C"
//       both have weights that surpass a certain predefined threshold, then we find that light bulb
//       "D" lights up. Otherwise "D" remains off. Furthermore, "B" has no actual effect on "D". 
//       This Bayesian Network can be visualized as follows:
//       
//       A    B    C
//        \       /
//         \     /
//          \   /
//            D   
// Note: run with "--require webppl-json"
// ------------------------------------------------------------------------------------------------

globalStore.d_threshold = 0.01

var genSample = function(){
    var A = sample(Uniform({a:0, b:1}))
    var B = sample(Uniform({a:0, b:1}))
    var C = sample(Uniform({a:0, b:1}))
    var D =  (A >= globalStore.d_threshold  && C >= globalStore.d_threshold) ? 1 : 0
    return {
        "A": A,
        "B": B,
        "C": C,
        "D": D,
    }
}

var computeSummaryStats = function(num_samples, samples) {
    var a_and_c_count = reduce(
        function(x, acc) {
            if (x['A'] >= globalStore.d_threshold && x['C'] >= globalStore.d_threshold) {
                return acc + 1
            } else {
                return acc
            }
        },
            0,
            samples
        );
    var not_a_or_not_c_count = reduce(
        function(x, acc) {
            if (x['A'] < globalStore.d_threshold || x['C'] <= globalStore.d_threshold) {
                return acc + 1
            } else {
                return acc
            }
        },
            0,
            samples
        );

    var a_count = reduce(
        function(x, acc) {
            if (x['A'] >= globalStore.d_threshold) {
                return acc + 1
            } else {
                return acc
            }
        },
            0,
            samples
        );

    var c_count = reduce(
        function(x, acc) {
            if (x['C'] >= globalStore.d_threshold) {
                return acc + 1
            } else {
                return acc
            }
        },
            0,
            samples
        );

    var d_count = reduce(
        function(x, acc) {
            if (x['D'] == 1.0) {
                return acc + 1
            } else {
                return acc
            }
        },
            0,
            samples
        );

    var stats = {
        'A_AND_C': a_and_c_count,
        'NOT_A_OR_NOT_C': not_a_or_not_c_count,
        'A': a_count ,
        'NOT_A': num_samples - a_count,
        'C': c_count,
        'NOT_C': num_samples - c_count,
        'D': d_count,
        'NOT_D': num_samples - d_count,
    }
    console.log(stats)
}

var genSamples = function(){
    var num_samples = 10000
    var testData = repeat(num_samples, genSample)
    var filename = './data/blicket_test_' + globalStore.d_threshold.toString() + '_p_' + num_samples.toString() + '.json' 
    json.write(filename, testData)
    computeSummaryStats(num_samples, testData)
}

genSamples()
